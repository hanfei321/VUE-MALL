define(["./defaultValue-bcb5baf7","./DeveloperError-b273b01a","./Check-f9a1a1be","./Math-588d98f6","./Cartesian2-10213add","./Rectangle-de996bfb","./Transforms-2b063051","./Matrix4-c981b715","./RuntimeError-1b5fbc4d","./WebGLConstants-667a4a5e","./ComponentDatatype-ec1abf38","./GeometryAttribute-49fe2445","./when-ae2a7552","./buildModuleUrl-cd6b3599","./GeometryAttributes-a8cf4ac9","./AttributeCompression-8a5fa32d","./GeometryPipeline-635df242","./EncodedCartesian3-96cc4460","./IndexDatatype-523f50d6","./IntersectionTests-cc1722b0","./Plane-bb97f210","./GeometryOffsetAttribute-a79c4b79","./GeometryInstance-9c4aba48","./arrayRemoveDuplicates-f05ed775","./EllipsoidTangentPlane-86347fa6","./ArcType-90391c26","./EllipsoidRhumbLine-b25fd372","./PolygonPipeline-bd17f470","./PolygonGeometryLibrary-a80bacff"],function(m,e,t,E,r,c,P,i,o,n,v,_,a,l,A,s,G,y,L,u,d,T,H,p,x,C,f,O,D){"use strict";var I=[],w=[];function g(e){var t,r=e.polygonHierarchy,i=m.defaultValue(e.ellipsoid,c.Ellipsoid.WGS84),o=m.defaultValue(e.granularity,E.CesiumMath.RADIANS_PER_DEGREE),n=m.defaultValue(e.perPositionHeight,!1),a=n&&m.defined(e.extrudedHeight),l=m.defaultValue(e.arcType,C.ArcType.GEODESIC),s=m.defaultValue(e.height,0),y=m.defaultValue(e.extrudedHeight,s),u=e.relativeExtruded;a||u||(t=Math.max(s,y),y=Math.min(s,y),s=t),this._ellipsoid=c.Ellipsoid.clone(i),this._granularity=o,this._height=s,this._extrudedHeight=y,this._relativeExtruded=u,this._arcType=l,this._polygonHierarchy=r,this._perPositionHeight=n,this._perPositionHeightExtrude=a,this._offsetAttribute=e.offsetAttribute,this._workerName="createPolygonOutlineGeometry",this.packedLength=D.PolygonGeometryLibrary.computeHierarchyPackedLength(r)+c.Ellipsoid.packedLength+8}g.pack=function(e,t,r){return r=m.defaultValue(r,0),r=D.PolygonGeometryLibrary.packPolygonHierarchy(e._polygonHierarchy,t,r),c.Ellipsoid.pack(e._ellipsoid,t,r),r+=c.Ellipsoid.packedLength,t[r++]=e._height,t[r++]=e._extrudedHeight,t[r++]=e._relativeExtruded?1:0,t[r++]=e._granularity,t[r++]=e._perPositionHeightExtrude?1:0,t[r++]=e._perPositionHeight?1:0,t[r++]=e._arcType,t[r++]=m.defaultValue(e._offsetAttribute,-1),t[r]=e.packedLength,t};var h=c.Ellipsoid.clone(c.Ellipsoid.UNIT_SPHERE),b={polygonHierarchy:{}};return g.unpack=function(e,t,r){t=m.defaultValue(t,0);var i=D.PolygonGeometryLibrary.unpackPolygonHierarchy(e,t);t=i.startingIndex,delete i.startingIndex;var o=c.Ellipsoid.unpack(e,t,h);t+=c.Ellipsoid.packedLength;var n=e[t++],a=e[t++],l=e[t++],s=e[t++],y=1===e[t++],u=1===e[t++],d=e[t++],p=e[t++],t=e[t];return m.defined(r)||(r=new g(b)),r._polygonHierarchy=i,r._ellipsoid=c.Ellipsoid.clone(o,r._ellipsoid),r._height=n,r._extrudedHeight=a,r._relativeExtruded=l,r._granularity=s,r._perPositionHeight=u,r._perPositionHeightExtrude=y,r._arcType=d,r._offsetAttribute=-1===p?void 0:p,r.packedLength=t,r},g.fromPositions=function(e){return new g({polygonHierarchy:{positions:(e=m.defaultValue(e,m.defaultValue.EMPTY_OBJECT)).positions},height:e.height,extrudedHeight:e.extrudedHeight,relativeExtruded:e.relativeExtruded,ellipsoid:e.ellipsoid,granularity:e.granularity,perPositionHeight:e.perPositionHeight,arcType:e.arcType,offsetAttribute:e.offsetAttribute})},g.createGeometry=function(e){var t=e._ellipsoid,r=e._granularity,i=!e._relativeExtruded,o=e._polygonHierarchy,n=e._perPositionHeight,a=e._arcType,l=D.PolygonGeometryLibrary.polygonOutlinesFromHierarchy(o,!n,t);if(0!==l.length){var s,y,u,d,p,c,f=[],g=E.CesiumMath.chordLength(r,t.maximumRadius),h=e._height,b=e._extrudedHeight;if(e._perPositionHeightExtrude||!E.CesiumMath.equalsEpsilon(h,b,0,E.CesiumMath.EPSILON2))for(s=0;s<l.length;s++)(d=function(e,t,r,i,o){var n,a=x.EllipsoidTangentPlane.fromPoints(t,e).projectPointsOntoPlane(t,I);O.PolygonPipeline.computeWindingOrder2D(a)===O.WindingOrder.CLOCKWISE&&(a.reverse(),t=t.slice().reverse());var l=t.length,s=new Array(l),y=0;if(i)for(n=new Float64Array(2*l*3*2),m=0;m<l;++m){s[m]=y/3;var u=t[m],d=t[(m+1)%l];n[y++]=u.x,n[y++]=u.y,n[y++]=u.z,n[y++]=d.x,n[y++]=d.y,n[y++]=d.z}else{var p,c=0;if(o===C.ArcType.GEODESIC)for(m=0;m<l;m++)c+=D.PolygonGeometryLibrary.subdivideLineCount(t[m],t[(m+1)%l],r);else if(o===C.ArcType.RHUMB)for(m=0;m<l;m++)c+=D.PolygonGeometryLibrary.subdivideRhumbLineCount(e,t[m],t[(m+1)%l],r);for(n=new Float64Array(3*c*2),m=0;m<l;++m){s[m]=y/3,o===C.ArcType.GEODESIC?p=D.PolygonGeometryLibrary.subdivideLine(t[m],t[(m+1)%l],r,w):o===C.ArcType.RHUMB&&(p=D.PolygonGeometryLibrary.subdivideRhumbLine(e,t[m],t[(m+1)%l],r,w));for(var f=p.length,g=0;g<f;++g)n[y++]=p[g]}}l=n.length/6;for(var h=s.length,i=2*(2*l+h),b=L.IndexDatatype.createTypedArray(l+h,i),y=0,m=0;m<l;++m)b[y++]=m,b[y++]=(m+1)%l,b[y++]=m+l,b[y++]=(m+1)%l+l;for(m=0;m<h;m++){var E=s[m];b[y++]=E,b[y++]=E+l}return new H.GeometryInstance({geometry:new _.Geometry({attributes:new A.GeometryAttributes({position:new _.GeometryAttribute({componentDatatype:v.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:n})}),indices:b,primitiveType:_.PrimitiveType.LINES})})}(t,l[s],g,n,a)).geometry=D.PolygonGeometryLibrary.scaleToGeodeticHeightExtruded(d.geometry,h,b,t,n,i),m.defined(e._offsetAttribute)&&(y=d.geometry.attributes.position.values.length/3,u=new Uint8Array(y),u=e._offsetAttribute===T.GeometryOffsetAttribute.TOP?T.arrayFill(u,1,0,y/2):(c=e._offsetAttribute===T.GeometryOffsetAttribute.NONE?0:1,T.arrayFill(u,c)),d.geometry.attributes.applyOffset=new _.GeometryAttribute({componentDatatype:v.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:u})),f.push(d);else for(s=0;s<l.length;s++)(d=function(e,t,r,i,o){var n,a=x.EllipsoidTangentPlane.fromPoints(t,e).projectPointsOntoPlane(t,I);O.PolygonPipeline.computeWindingOrder2D(a)===O.WindingOrder.CLOCKWISE&&(a.reverse(),t=t.slice().reverse());var l=t.length,s=0;if(i)for(n=new Float64Array(2*l*3),h=0;h<l;h++){var y=t[h],u=t[(h+1)%l];n[s++]=y.x,n[s++]=y.y,n[s++]=y.z,n[s++]=u.x,n[s++]=u.y,n[s++]=u.z}else{var d,p=0;if(o===C.ArcType.GEODESIC)for(h=0;h<l;h++)p+=D.PolygonGeometryLibrary.subdivideLineCount(t[h],t[(h+1)%l],r);else if(o===C.ArcType.RHUMB)for(h=0;h<l;h++)p+=D.PolygonGeometryLibrary.subdivideRhumbLineCount(e,t[h],t[(h+1)%l],r);for(n=new Float64Array(3*p),h=0;h<l;h++){o===C.ArcType.GEODESIC?d=D.PolygonGeometryLibrary.subdivideLine(t[h],t[(h+1)%l],r,w):o===C.ArcType.RHUMB&&(d=D.PolygonGeometryLibrary.subdivideRhumbLine(e,t[h],t[(h+1)%l],r,w));for(var c=d.length,f=0;f<c;++f)n[s++]=d[f]}}for(var i=2*(l=n.length/3),g=L.IndexDatatype.createTypedArray(l,i),s=0,h=0;h<l-1;h++)g[s++]=h,g[s++]=h+1;return g[s++]=l-1,g[s++]=0,new H.GeometryInstance({geometry:new _.Geometry({attributes:new A.GeometryAttributes({position:new _.GeometryAttribute({componentDatatype:v.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:n})}),indices:g,primitiveType:_.PrimitiveType.LINES})})}(t,l[s],g,n,a)).geometry.attributes.position.values=O.PolygonPipeline.scaleToGeodeticHeight(d.geometry.attributes.position.values,h,t,!n),m.defined(e._offsetAttribute)&&(p=d.geometry.attributes.position.values.length,p=new Uint8Array(p/3),c=e._offsetAttribute===T.GeometryOffsetAttribute.NONE?0:1,T.arrayFill(p,c),d.geometry.attributes.applyOffset=new _.GeometryAttribute({componentDatatype:v.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:p})),f.push(d);o=G.GeometryPipeline.combineInstances(f)[0],r=P.BoundingSphere.fromVertices(o.attributes.position.values);return new _.Geometry({attributes:o.attributes,indices:o.indices,primitiveType:o.primitiveType,boundingSphere:r,offsetAttribute:e._offsetAttribute})}},function(e,t){return m.defined(t)&&(e=g.unpack(e,t)),e._ellipsoid=c.Ellipsoid.clone(e._ellipsoid),g.createGeometry(e)}});
