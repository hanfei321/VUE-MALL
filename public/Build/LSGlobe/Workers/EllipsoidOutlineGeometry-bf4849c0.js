define(["exports","./defaultValue-bcb5baf7","./DeveloperError-b273b01a","./Math-588d98f6","./Cartesian2-10213add","./Rectangle-de996bfb","./Transforms-2b063051","./ComponentDatatype-ec1abf38","./GeometryAttribute-49fe2445","./GeometryAttributes-a8cf4ac9","./IndexDatatype-523f50d6","./GeometryOffsetAttribute-a79c4b79"],function(i,O,t,I,d,T,z,L,R,N,B,S){"use strict";var f=new d.Cartesian3(1,1,1),U=Math.cos,F=Math.sin;function c(i){i=O.defaultValue(i,O.defaultValue.EMPTY_OBJECT);var t=O.defaultValue(i.radii,f),e=O.defaultValue(i.innerRadii,t),a=O.defaultValue(i.minimumClock,0),n=O.defaultValue(i.maximumClock,I.CesiumMath.TWO_PI),r=O.defaultValue(i.minimumCone,0),o=O.defaultValue(i.maximumCone,I.CesiumMath.PI),s=Math.round(O.defaultValue(i.stackPartitions,10)),m=Math.round(O.defaultValue(i.slicePartitions,8)),u=Math.round(O.defaultValue(i.subdivisions,128));this._radii=d.Cartesian3.clone(t),this._innerRadii=d.Cartesian3.clone(e),this._minimumClock=a,this._maximumClock=n,this._minimumCone=r,this._maximumCone=o,this._stackPartitions=s,this._slicePartitions=m,this._subdivisions=u,this._offsetAttribute=i.offsetAttribute,this._workerName="createEllipsoidOutlineGeometry"}c.packedLength=2*d.Cartesian3.packedLength+8,c.pack=function(i,t,e){return e=O.defaultValue(e,0),d.Cartesian3.pack(i._radii,t,e),e+=d.Cartesian3.packedLength,d.Cartesian3.pack(i._innerRadii,t,e),e+=d.Cartesian3.packedLength,t[e++]=i._minimumClock,t[e++]=i._maximumClock,t[e++]=i._minimumCone,t[e++]=i._maximumCone,t[e++]=i._stackPartitions,t[e++]=i._slicePartitions,t[e++]=i._subdivisions,t[e]=O.defaultValue(i._offsetAttribute,-1),t};var C=new d.Cartesian3,_=new d.Cartesian3,p={radii:C,innerRadii:_,minimumClock:void 0,maximumClock:void 0,minimumCone:void 0,maximumCone:void 0,stackPartitions:void 0,slicePartitions:void 0,subdivisions:void 0,offsetAttribute:void 0};c.unpack=function(i,t,e){t=O.defaultValue(t,0);var a=d.Cartesian3.unpack(i,t,C);t+=d.Cartesian3.packedLength;var n=d.Cartesian3.unpack(i,t,_);t+=d.Cartesian3.packedLength;var r=i[t++],o=i[t++],s=i[t++],m=i[t++],u=i[t++],f=i[t++],l=i[t++],t=i[t];return O.defined(e)?(e._radii=d.Cartesian3.clone(a,e._radii),e._innerRadii=d.Cartesian3.clone(n,e._innerRadii),e._minimumClock=r,e._maximumClock=o,e._minimumCone=s,e._maximumCone=m,e._stackPartitions=u,e._slicePartitions=f,e._subdivisions=l,e._offsetAttribute=-1===t?void 0:t,e):(p.minimumClock=r,p.maximumClock=o,p.minimumCone=s,p.maximumCone=m,p.stackPartitions=u,p.slicePartitions=f,p.subdivisions=l,p.offsetAttribute=-1===t?void 0:t,new c(p))},c.createGeometry=function(i){var t=i._radii;if(!(t.x<=0||t.y<=0||t.z<=0)){var e=i._innerRadii;if(!(e.x<=0||e.y<=0||e.z<=0)){var a=i._minimumClock,n=i._maximumClock,r=i._minimumCone,o=i._maximumCone,s=i._subdivisions,m=T.Ellipsoid.fromCartesian3(t),u=i._slicePartitions+1,f=i._stackPartitions+1;(u=Math.round(u*Math.abs(n-a)/I.CesiumMath.TWO_PI))<2&&(u=2),(f=Math.round(f*Math.abs(o-r)/I.CesiumMath.PI))<2&&(f=2);var l=0,d=1,c=e.x!==t.x||e.y!==t.y||e.z!==t.z,C=!1,_=!1;c&&(d=2,0<r&&(C=!0,l+=u),o<Math.PI&&(_=!0,l+=u));for(var p,b,h=s*d*(f+u),y=new Float64Array(3*h),l=2*(h+l-(u+f)*d),v=B.IndexDatatype.createTypedArray(h,l),k=0,A=new Array(f),x=new Array(f),P=0;P<f;P++)b=r+P*(o-r)/(f-1),A[P]=F(b),x[P]=U(b);var M=new Array(s),w=new Array(s);for(P=0;P<s;P++)p=a+P*(n-a)/(s-1),M[P]=F(p),w[P]=U(p);for(P=0;P<f;P++)for(g=0;g<s;g++)y[k++]=t.x*A[P]*w[g],y[k++]=t.y*A[P]*M[g],y[k++]=t.z*x[P];if(c)for(P=0;P<f;P++)for(g=0;g<s;g++)y[k++]=e.x*A[P]*w[g],y[k++]=e.y*A[P]*M[g],y[k++]=e.z*x[P];for(A.length=s,x.length=s,P=0;P<s;P++)b=r+P*(o-r)/(s-1),A[P]=F(b),x[P]=U(b);for(M.length=u,w.length=u,P=0;P<u;P++)p=a+P*(n-a)/(u-1),M[P]=F(p),w[P]=U(p);for(P=0;P<s;P++)for(g=0;g<u;g++)y[k++]=t.x*A[P]*w[g],y[k++]=t.y*A[P]*M[g],y[k++]=t.z*x[P];if(c)for(P=0;P<s;P++)for(g=0;g<u;g++)y[k++]=e.x*A[P]*w[g],y[k++]=e.y*A[P]*M[g],y[k++]=e.z*x[P];for(P=k=0;P<f*d;P++)for(var V=P*s,g=0;g<s-1;g++)v[k++]=V+g,v[k++]=V+g+1;var E=f*s*d;for(P=0;P<u;P++)for(g=0;g<s-1;g++)v[k++]=E+P+g*u,v[k++]=E+P+(g+1)*u;if(c)for(E=f*s*d+u*s,P=0;P<u;P++)for(g=0;g<s-1;g++)v[k++]=E+P+g*u,v[k++]=E+P+(g+1)*u;if(c){var G=f*s*d,D=G+s*u;if(C)for(P=0;P<u;P++)v[k++]=G+P,v[k++]=D+P;if(_)for(G+=s*u-u,D+=s*u-u,P=0;P<u;P++)v[k++]=G+P,v[k++]=D+P}c=new N.GeometryAttributes({position:new R.GeometryAttribute({componentDatatype:L.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:y})});return O.defined(i._offsetAttribute)&&(C=y.length,_=new Uint8Array(C/3),C=i._offsetAttribute===S.GeometryOffsetAttribute.NONE?0:1,S.arrayFill(_,C),c.applyOffset=new R.GeometryAttribute({componentDatatype:L.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:1,values:_})),new R.Geometry({attributes:c,indices:v,primitiveType:R.PrimitiveType.LINES,boundingSphere:z.BoundingSphere.fromEllipsoid(m),offsetAttribute:i._offsetAttribute})}}},i.EllipsoidOutlineGeometry=c});
